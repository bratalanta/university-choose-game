{"version":3,"sources":["js/const.js","js/common.js","js/functions.js","js/level2.js"],"names":["AppRoute","Home","Lose","Level1","Level2","Level3","Win","Rules","StorageField","Name","Theme","Complexity","Lvl","HeartsCount","Points","TimeLeft","Easy","Medium","Hard","ComplexityTranslation","ComplexityExtraPointsFactor","StartFeatures","Level","LevelData","easy","WinPoints","ErrorPoints","Time","medium","hard","NEXT_LEVEL_TRANSITION_TIME","redirect","evt","path","preventDefault","location","replace","setTheme","theme","document","querySelector","style","background","ThemeImage","getCurrentUserData","name","localStorage","getItem","complexity","lvl","points","heartsCount","timeLeft","reducePoints","playerPointsElement","reducedPoints","Number","setItem","innerText","reduceHeartsCount","heartsListElement","firstErrorHeartsCount","secondErrorHeartsCount","children","src","HeartImage","launchTimer","timerElement","checkBtn","launchTime","min","Math","floor","sec","timer","setInterval","classList","contains","clearInterval","toggle","startLevel","authorLink","playerName","playerPoints","winPoints","errorPoints","backToHomeLink","heartsList","i","display","window","addEventListener","resetStorage","setPoints","modalExtraPointsElement","extraPoints","round","goNextLevel","lvlPath","modal","add","remove","setTimeout","getShuffledArray","array","length","j","random","getRandomInt","max","ceil","container","PicturesCount","IMAGE_SIZE","CONTAINER_SEPARATOR_OFFSET_LEFT","offsetWidth","OFFSCREEN_POSITION","shuffledAnimals","Object","keys","Level2Image","dx","dy","correctTopPosition","correctLeftPosition","handleDragStart","clientX","target","offsetLeft","clientY","offsetTop","ghostImg","cloneNode","dataTransfer","setDragImage","handleDrag","offsetHeight","top","left","handleDragEnd","img","createElement","setAttribute","append","leftSide","rightSide","Array","from","forEach","item","tagName","itemId","split","at","charAt","push","every","el"],"mappings":"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","file":"level2.4c105baa.js","sourceRoot":"..\\src","sourcesContent":["export const AppRoute = {\n    Home: '/index.html',\n    Lose: '/lose.html',\n    Level1: '/level1.html',\n    Level2: '/level2.html',\n    Level3: '/level3.html',\n    Win: '/win.html',\n    Rules: '/rules.html',\n}\n\nexport const StorageField = {\n    Name: 'name',\n    Theme: 'theme',\n    Complexity: 'complexity',\n    Lvl: 'lvl',\n    HeartsCount: 'hearts',\n    Points: 'points',\n    TimeLeft: 'timeLeft'\n}\n\nexport const Complexity = {\n    Easy: 'easy',\n    Medium: 'medium',\n    Hard: 'hard'\n}\n\nexport const ComplexityTranslation = {\n    [Complexity.Easy]: 'лёгкий',\n    [Complexity.Medium]: 'средний',\n    [Complexity.Hard]: 'сложный'\n}\n\nexport const ComplexityExtraPointsFactor = {\n    [Complexity.Easy]: 10,\n    [Complexity.Medium]: 5,\n    [Complexity.Hard]: 1,\n}\n\nexport const StartFeatures = {\n    Level: 1,\n    HeartsCount: 3,\n    Points: 0\n}\n\nexport const LevelData = {\n\t1: {\n\t\tComplexity: {\n\t\t\teasy: {\n\t\t\t\tWinPoints: 5,\n\t\t\t\tErrorPoints: -1,\n\t\t\t\tTime: 30\n\t\t\t},\n\t\t\tmedium: {\n\t\t\t\tWinPoints: 7,\n\t\t\t\tErrorPoints: -3,\n\t\t\t\tTime: 20\n\t\t\t},\n\t\t\thard: {\n\t\t\t\tWinPoints: 15,\n\t\t\t\tErrorPoints: -5,\n\t\t\t\tTime: 15\n\t\t\t}\n\t\t}\n\t},\n\t2: {\n\t\tComplexity: {\n\t\t\teasy: {\n\t\t\t\tWinPoints: 10,\n\t\t\t\tErrorPoints: -3,\n\t\t\t\tTime: 60\n\t\t\t},\n\t\t\tmedium: {\n\t\t\t\tWinPoints: 15,\n\t\t\t\tErrorPoints: -5,\n\t\t\t\tTime: 40\n\t\t\t},\n\t\t\thard: {\n\t\t\t\tWinPoints: 20,\n\t\t\t\tErrorPoints: -7,\n\t\t\t\tTime: 30\n\t\t\t}\n\t\t}\n\t},\n\t3: {\n\t\tComplexity: {\n\t\t\teasy: {\n\t\t\t\tWinPoints: 15,\n\t\t\t\tErrorPoints: -5,\n\t\t\t\tTime: 60\n\t\t\t},\n\t\t\tmedium: {\n\t\t\t\tWinPoints: 20,\n\t\t\t\tErrorPoints: -7,\n\t\t\t\tTime: 40\n\t\t\t},\n\t\t\thard: {\n\t\t\t\tWinPoints: 30,\n\t\t\t\tErrorPoints: -9,\n\t\t\t\tTime: 30\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport const NEXT_LEVEL_TRANSITION_TIME = 2000\n","import { AppRoute, ComplexityExtraPointsFactor, LevelData, NEXT_LEVEL_TRANSITION_TIME, StartFeatures, StorageField } from \"./const.js\"\nimport HeartImage from '../img/game/hearts/*.png';\nimport ThemeImage from '../img/game/themes/*.jpg';\n\nexport const redirect = (evt, path) => {\n    evt.preventDefault()\n\n    location.replace(path)\n}\n\nexport const setTheme = (theme) => {\n    document.querySelector('.bg').style.background = `url(${ThemeImage[theme]}) no-repeat center`\n}\n\nexport const getCurrentUserData = () => (\n    {\n        name: localStorage.getItem(StorageField.Name),\n        theme: localStorage.getItem(StorageField.Theme),\n        complexity: localStorage.getItem(StorageField.Complexity),\n        lvl: localStorage.getItem(StorageField.Lvl),\n        points: localStorage.getItem(StorageField.Points),\n        heartsCount: localStorage.getItem(StorageField.HeartsCount),\n        timeLeft: localStorage.getItem(StorageField.TimeLeft)\n    }\n)\n\nexport const reducePoints = () => {\n    const {\n        complexity,\n        lvl,\n        points\n    } = getCurrentUserData()\n    const playerPointsElement = document.querySelector('.player-points__number')\n\n    const reducedPoints = Number(points) + LevelData[lvl].Complexity[complexity].ErrorPoints\n\n    localStorage.setItem(StorageField.Points, reducedPoints < 0 ? 0 : reducedPoints)\n    playerPointsElement.innerText = reducedPoints < 0 ? 0 : reducedPoints\n}\n\nexport const reduceHeartsCount = () => {\n    const {\n        heartsCount\n    } = getCurrentUserData()\n    const heartsListElement = document.querySelector('.hearts')\n\n    const firstErrorHeartsCount = StartFeatures.HeartsCount - 1\n    const secondErrorHeartsCount = StartFeatures.HeartsCount - 2\n\n    switch(heartsCount - 1) {\n        case firstErrorHeartsCount:\n            heartsListElement.children[firstErrorHeartsCount].src = HeartImage['black_heart'];\n            localStorage.setItem(StorageField.HeartsCount, firstErrorHeartsCount)\n            break\n        case secondErrorHeartsCount:\n            heartsListElement.children[secondErrorHeartsCount].src = HeartImage['black_heart']\n            localStorage.setItem(StorageField.HeartsCount, secondErrorHeartsCount)\n            break\n        case 0:\n            heartsListElement.children[0].src = HeartImage['black_heart']\n            location.replace(AppRoute.Lose)\n    }\n}\n\nexport const launchTimer = () => {\n    const timerElement = document.querySelector('.header__timer')\n    const checkBtn = document.querySelector('.footer__check')\n\n    const {\n        timeLeft,\n        complexity,\n        lvl\n    } = getCurrentUserData()\n\n    const launchTime = timeLeft ? timeLeft : LevelData[lvl].Complexity[complexity].Time\n    let min = Math.floor(launchTime / 60)\n    let sec = launchTime % 60\n\n    const timer = setInterval(() => {\n        if (checkBtn.classList.contains('passed')) {\n            clearInterval(timer)\n\n            return\n        }\n\n        localStorage.setItem(StorageField.TimeLeft, min * 60 + sec)\n        timerElement.innerText=`0${min}:${sec / 10 >= 1 ? sec : `0${sec}`}`\n\n        if (sec === 0 && min === 0) {\n            location.replace(AppRoute.Lose)\n            clearInterval(timer);\n        }\n\n        sec--\n\n        if (min < 1 && sec < 10) {\n            timerElement.classList.toggle('end')\n        }\n\n        if (sec < 0) {\n            min--\n            sec = 59\n        }\n\n    }, 1000);\n}\n\nexport const startLevel = () => {\n    const {\n        name,\n        theme,\n        complexity,\n        lvl,\n        points,\n        heartsCount\n    } = getCurrentUserData()\n\n    const authorLink = document.querySelector('.footer__author')\n    const playerName = document.querySelector('.level-info__player-name')\n    const playerPoints = document.querySelector('.player-points__number')\n    const winPoints = document.querySelector('.win-points__number')\n    const errorPoints = document.querySelector('.error-points__number')\n    const backToHomeLink = document.querySelector('.menu__item-link')\n    const heartsList = document.querySelector('.hearts')\n\n    for (let i = 0; i < StartFeatures.HeartsCount - heartsCount; i++) {\n        if (heartsCount === StartFeatures.HeartsCount) {\n            break\n        }\n\n        heartsList.children[StartFeatures.HeartsCount - 1 - i].src = HeartImage['black_heart']\n    }\n\n    playerName.innerText = name\n    playerPoints.innerText = points\n    winPoints.innerText = '+' + LevelData[lvl].Complexity[complexity].WinPoints\n    errorPoints.innerText = LevelData[lvl].Complexity[complexity].ErrorPoints\n    authorLink.style.display = 'none'\n\n    window.addEventListener('load', () => launchTimer())\n    backToHomeLink.addEventListener('click', (evt) => redirect(evt, AppRoute.Home))\n    setTheme(theme)\n}\n\nexport const resetStorage = (shouldResetPoints = true) => {\n    if (shouldResetPoints) {\n        localStorage.setItem(StorageField.Points, StartFeatures.Points);\n    }\n\n    localStorage.setItem(StorageField.TimeLeft, '');\n    localStorage.setItem(StorageField.Lvl, StartFeatures.Level);\n\tlocalStorage.setItem(StorageField.HeartsCount, StartFeatures.HeartsCount);\n}\n\nconst setPoints = () => {\n    const modalExtraPointsElement = document.querySelector('.extra-points__number')\n    const {\n        complexity,\n        points,\n        timeLeft,\n        lvl,\n    } = getCurrentUserData()\n\n    const winPoints = Number(points) + LevelData[lvl].Complexity[complexity].WinPoints\n    const extraPoints = Math.round(timeLeft / ComplexityExtraPointsFactor[complexity])\n    modalExtraPointsElement.innerText = extraPoints\n\n    localStorage.setItem(StorageField.Points, winPoints + extraPoints)\n}\n\nexport const goNextLevel = (lvlPath) => {\n    const {\n        lvl,\n    } = getCurrentUserData()\n\n    const modal = document.querySelector('.modal')\n    document.querySelector('.footer__check').classList.add('passed')\n    modal.classList.remove('hidden')\n\n    setPoints()\n    localStorage.setItem(StorageField.Lvl, Number(lvl) + 1)\n    localStorage.setItem(StorageField.TimeLeft, '');\n\n    setTimeout(() => {\n        location.replace(lvlPath)\n    }, NEXT_LEVEL_TRANSITION_TIME);\n}\n","export const getShuffledArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array\n}\n\nexport const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","import {getCurrentUserData, startLevel, reduceHeartsCount, goNextLevel, reducePoints} from './common.js'\nimport { AppRoute, Complexity } from './const.js'\nimport { getRandomInt, getShuffledArray } from './functions.js'\nimport Level2Image from '../img/level2/*.png';\n\nstartLevel()\nconst {\n    complexity,\n} = getCurrentUserData()\n\nconst container = document.querySelector('.content-full')\nconst checkBtn = document.querySelector('.footer__check')\n\nconst PicturesCount = {\n    [Complexity.Easy]: 8,\n    [Complexity.Medium]: 14,\n    [Complexity.Hard]: 20\n}\n\nconst IMAGE_SIZE = '70'\nconst CONTAINER_SEPARATOR_OFFSET_LEFT = container.offsetWidth / 2 - IMAGE_SIZE / 2\nconst OFFSCREEN_POSITION = 999999\n\nconst shuffledAnimals = getShuffledArray(Object.keys(Level2Image))\n\n//обработка переноса\nlet dx = 0\nlet dy = 0\nlet correctTopPosition = 0\nlet correctLeftPosition = 0\n\nconst handleDragStart = (evt) => {\n    dx = evt.clientX - evt.target.offsetLeft\n    dy = evt.clientY - evt.target.offsetTop\n\n    const ghostImg = evt.target.cloneNode(true)\n    evt.dataTransfer.setDragImage(ghostImg, OFFSCREEN_POSITION, OFFSCREEN_POSITION)\n}\n\nconst handleDrag = (evt) => {\n    if (evt.clientY - dy >= 0 && evt.clientY - dy < container.offsetHeight - IMAGE_SIZE) {\n        evt.target.style.top = `${evt.clientY - dy}px`\n        correctTopPosition = evt.clientY - dy\n    }\n\n    if (evt.clientX - dx >= 0 && evt.clientX - dx < container.offsetWidth - IMAGE_SIZE) {\n        evt.target.style.left = `${evt.clientX - dx}px`\n        correctLeftPosition = evt.clientX - dx\n    }\n}\n\nconst handleDragEnd = (evt) => {\n    evt.target.style.left = `${correctLeftPosition}px`\n    evt.target.style.top = `${correctTopPosition}px`\n}\n\ndocument.addEventListener('dragover', (evt) => {\n    evt.preventDefault()\n})\n\ndocument.addEventListener('dragenter', (evt) => {\n    evt.preventDefault()\n})\n\nfor (let i = 0; i < PicturesCount[complexity]; i++) {\n    const img = document.createElement('img')\n    img.setAttribute('draggable', true)\n    img.src = Level2Image[shuffledAnimals[i]]\n\n    img.style.top = `${getRandomInt(IMAGE_SIZE, container.offsetHeight - IMAGE_SIZE)}px`\n    img.style.left = `${getRandomInt(IMAGE_SIZE, container.offsetWidth - IMAGE_SIZE)}px`\n\n    container.append(img)\n\n    img.addEventListener('dragstart', handleDragStart)\n    img.addEventListener('drag', handleDrag)\n    img.addEventListener('dragend', handleDragEnd)\n}\n\ncheckBtn.addEventListener('click', () => {\n    const leftSide = []\n    const rightSide = []\n\n    Array.from(container.children).forEach((item) => {\n        if (item.tagName == 'DIV') {\n            return\n        }\n\n        const itemId = item.src.split('/').at(-1).charAt(0)\n\n        if (item.offsetLeft <= CONTAINER_SEPARATOR_OFFSET_LEFT) {\n            leftSide.push(itemId)\n\n            return\n        }\n\n        rightSide.push(itemId)\n    })\n\n    const areElementsDividedCorrectly = leftSide.every((el) => el === leftSide[0]) &&\n        rightSide.every((el) => el === rightSide[0])\n\n        if (areElementsDividedCorrectly) {\n            goNextLevel(AppRoute.Level3)\n\n            return\n        }\n\n    reduceHeartsCount()\n    reducePoints()\n})\n"]}